/*
 * This file is generated by jOOQ.
 */
package ru.skwardlow.database.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.skwardlow.database.DefaultSchema;
import ru.skwardlow.database.tables.records.LangunityRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Langunity extends TableImpl<LangunityRecord> {

    private static final long serialVersionUID = -440606484;

    /**
     * The reference instance of <code>LangUnity</code>
     */
    public static final Langunity LANGUNITY = new Langunity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LangunityRecord> getRecordType() {
        return LangunityRecord.class;
    }

    /**
     * The column <code>LangUnity.id_Dev</code>.
     */
    public final TableField<LangunityRecord, Integer> ID_DEV = createField("id_Dev", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>LangUnity.id_Lang</code>.
     */
    public final TableField<LangunityRecord, Integer> ID_LANG = createField("id_Lang", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>LangUnity</code> table reference
     */
    public Langunity() {
        this(DSL.name("LangUnity"), null);
    }

    /**
     * Create an aliased <code>LangUnity</code> table reference
     */
    public Langunity(String alias) {
        this(DSL.name(alias), LANGUNITY);
    }

    /**
     * Create an aliased <code>LangUnity</code> table reference
     */
    public Langunity(Name alias) {
        this(alias, LANGUNITY);
    }

    private Langunity(Name alias, Table<LangunityRecord> aliased) {
        this(alias, aliased, null);
    }

    private Langunity(Name alias, Table<LangunityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Langunity as(String alias) {
        return new Langunity(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Langunity as(Name alias) {
        return new Langunity(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Langunity rename(String name) {
        return new Langunity(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Langunity rename(Name name) {
        return new Langunity(name, null);
    }
}
